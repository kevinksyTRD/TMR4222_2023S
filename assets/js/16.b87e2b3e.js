(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{317:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pipe-friction-calculation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pipe-friction-calculation"}},[t._v("#")]),t._v(" Pipe friction calculation")]),t._v(" "),s("p",[t._v("First, we will import the necessary packages to solve the problems.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fluids "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fittings\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fluids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("piping "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" nearest_pipe\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" pyfluids "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Fluid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FluidsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scipy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("optimize "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" root_scalar\n")])])]),s("h2",{attrs:{id:"_1-water-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-water-flow"}},[t._v("#")]),t._v(" 1. Water flow")]),t._v(" "),s("p",[t._v("Water at 30"),s("sup",[t._v("o")]),t._v("C flows through a 20m length of 50mm steel pipe (smooth wall) of Sch. 40 at a flow rate of 200 liter per min. Calculate the Reynolds number and friction factor. What is the pressure drop and head loss in the pipe?")]),t._v(" "),s("p",{staticStyle:{"text-align":"center"}},[t._v("\n============== Answer ==============\n")]),t._v(" "),s("p",[t._v("We will use the following equations to get the answers.")]),t._v(" "),s("p",[t._v("$$\n\\text{Re} _d = \\frac{\\rho V D}{\\mu}\n$$")]),t._v(" "),s("p",[t._v("$$\nh_f = \\frac{1}{2g} \\frac{V^2}{D}\n$$")]),t._v(" "),s("p",[t._v("The density (\\(\\rho\\)) and dynamic viscosity (\\(\\mu\\)) of water can be obtained using "),s("code",[t._v("pyfluids")]),t._v(" package which is a wrapper for "),s("code",[t._v("CoolProp")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Following is given from the problem:")]),t._v("\ntemp_water_deg_C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\nlength_pipe_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nnominal_diamter_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),t._v("\npipe_schedule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"40"')]),t._v("\nflow_l_per_min "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\nroughness "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material_roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clean steel pipe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngrav_acc_m_per_s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.81")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Roughness of the pipe is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".6f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# First, let's define our water")]),t._v("\nwater "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Fluid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FluidsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("with_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pressure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp_water_deg_C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calculate the inner diameter of the pipe")]),t._v("\nnps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d_outer_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thickness_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nearest_pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Di"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"40"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"The inner diameter of the pipe is: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".4f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('m"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calculate the velocity from the flow and the diameter")]),t._v("\nflow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_l_per_min "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e3")]),t._v("\narea_pipe_m2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d_inner_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nvelocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" area_pipe_m2\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calculate Reynolds number")]),t._v("\nre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" velocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d_inner_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Re = ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Let's try the API")]),t._v("\nre_api "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reynolds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    V"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("velocity_m_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Re = ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("re_api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' from fluids API"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calulcate friction factor")]),t._v("\nfric_factor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("friction_factor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Re"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Friction factor is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("fric_factor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".4f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calculate pressure drop and head loss with Darcy-Weibach equation")]),t._v("\nhead_loss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fric_factor \\\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" grav_acc_m_per_s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \\\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" velocity_m_per_s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d_inner_m \\\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" length_pipe_m\np_drop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" grav_acc_m_per_s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" head_loss\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Head loss is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("head_loss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".2f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' m"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"pressure drop is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' Pa"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Roughness of the pipe is 0.000150\nThe inner diameter of the pipe is: 0.0525m\nRe = 101000.2\nRe = 101000.2 from fluids API\nFriction factor is 0.0271\nHead loss is 1.25 m\npressure drop is 12230 Pa\n")])])]),s("p",[t._v("We can try an API from "),s("code",[t._v("fluids")]),t._v(" to get the same answer .")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mass_flow_kg_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density\np_drop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_phase_dP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mass_flow_kg_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    L"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("length_pipe_m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhead_loss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_drop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" grav_acc_m_per_s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Pressure drop from API is: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' Pa"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Head loss from API is: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("head_loss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".3f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' m"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Pressure drop from API is: 12230 Pa\nHead loss from API is: 1.252 m\n")])])]),s("h2",{attrs:{id:"_2-find-flow-from-the-pressure-drop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-find-flow-from-the-pressure-drop"}},[t._v("#")]),t._v(" 2. Find flow from the pressure drop")]),t._v(" "),s("p",[t._v("We measured the pressure drop of the pipe and we found it to be 25000 Pa. What is the flow in the pipe?")]),t._v(" "),s("p",{staticStyle:{"text-align":"center"}},[t._v("\n============== Answer ==============\n")]),t._v(" "),s("p",[t._v("Finding flow from the pressure drop is not a trivial problem because the function to solve is non-linear implicit equation.")]),t._v(" "),s("p",[t._v("$$\n\\Delta p = f_d\\left(\\mathrm{Re}_D\\right) \\frac{\\rho}{2} \\frac{V^2}{D_i} \\cdot L\n$$")]),t._v(" "),s("p",[t._v("$$\n\\text{Re} _d = \\frac{\\rho V D}{\\mu}\n$$")]),t._v(" "),s("p",[t._v("$$\nQ = V \\cdot A = \\frac{\\pi D^2}{4} V\n$$")]),t._v(" "),s("p",[t._v("First, we will try with an assumption that the friction factor is constant as the Re is quite high.")]),t._v(" "),s("p",[t._v("$$\nV = \\sqrt{\\Delta p \\cdot \\frac{2D_i}{f_d \\rho L} }\n$$")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("p_drop_pa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25000")]),t._v("\nvelocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    p_drop_pa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d_inner_m \\\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fric_factor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" length_pipe_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" velocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" area_pipe_m2\nflow_l_per_min "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\nflow_kg_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Water flow is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flow_l_per_min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" l/min or ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flow_kg_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".2f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' kg/s"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Water flow is 285.9 l/min or 4.74 kg/s\n")])])]),s("p",[t._v("We can try to verify it by calculating the pressure drop again.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("p_drop_estimated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_phase_dP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flow_kg_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    L"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("length_pipe_m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Presure drop calculated back is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop_estimated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' Pa"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Presure drop calculated back is 24649.6 Pa\n")])])]),s("p",[t._v("This may be close enough. However, we can get more accurate solution by solving the equation numerically. First, we define the function that is the equation to solve.")]),t._v(" "),s("p",[t._v("$$\nf(Q) = \\Delta P - \\Delta P(Q) = 0\n$$")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_to_solve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_as_flow_l_per_min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    flow_kg_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x_as_flow_l_per_min "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" p_drop_pa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_phase_dP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flow_kg_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        mu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("water"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        L"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("length_pipe_m\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Then, we can use the solver in "),s("code",[t._v("SciPy")]),t._v(" package to solve the eqation.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("solution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root_scalar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("function_to_solve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x0"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flow_l_per_min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flow_l_per_min "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"The accurate answer is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("solution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".2f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' l/min"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("The accurate answer is 288.00 l/min\n")])])]),s("h2",{attrs:{id:"_3-friction-from-pipe-fittings-and-valves"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-friction-from-pipe-fittings-and-valves"}},[t._v("#")]),t._v(" 3. Friction from pipe fittings and valves")]),t._v(" "),s("p",[t._v("Given the following pipe fittings and pipe, calculate the pressure drop of the pipe section.")]),t._v(" "),s("ul",[s("li",[t._v("fluid: methane at -163 "),s("sup",[t._v("o")]),t._v("C and 1 bar")]),t._v(" "),s("li",[t._v("flow: 9000 m"),s("sup",[t._v("3")]),t._v("/h")]),t._v(" "),s("li",[t._v("nominal pipe diameter: 450mm,")]),t._v(" "),s("li",[t._v("Clean stainless steel pipe")]),t._v(" "),s("li",[t._v("pipe schedule: 80s")]),t._v(" "),s("li",[t._v("pipe length: 24m")]),t._v(" "),s("li",[t._v("90"),s("sup",[t._v("o")]),t._v(" bend: bend diameter 457mm")]),t._v(" "),s("li",[t._v("Valve: Gate valve with \\(Cv=24000\\)")])]),t._v(" "),s("p",{staticStyle:{"text-align":"center"}},[t._v("\n============== Answer ==============\n")]),t._v(" "),s("p",[t._v("We will calculate the pressure drop for the pipe and calculate K value for each fitting or\nvalve to calculate the pressure drop with the following formula.")]),t._v(" "),s("p",[t._v("$$\nK=\\frac{\\Delta p}{0.5 \\rho V^2}\n$$")]),t._v(" "),s("p",[t._v("$$\n\\sum \\Delta p = \\Delta p_{\\text{pipe}} + {0.5 \\rho V^2} \\sum K\n$$")]),t._v(" "),s("p",[t._v("$$\nK=1.6 \\times 10^9 \\frac{D^4}{\\left(K_v / 1.56\\right)^2}\n$$")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("liquid_methane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Fluid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FluidsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("with_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pressure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("163")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Liquid methane: \\n\\t"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"density: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' kg/m3\\n\\t"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"dynamic viscosity: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".3e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' Pa s"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nflow_m3_per_h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v("\nroughness "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("material_roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clean stainless steel pipe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Roughness of the pipe is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".3e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d_outer_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thickness_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nearest_pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Di"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"80"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlength_pipe_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\nbend_radius_m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.457")]),t._v("\nc_v_valvue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24000")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We need Reynods number to calculate K for the bend")]),t._v("\narea_pipe_section "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d_inner_m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nvelocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" area_pipe_section\nre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" velocity_m_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d_inner_m \\\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the K value for the bend")]),t._v("\nk_bend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fittings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bend_rounded"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Di"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    angle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bend_radius_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Re"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"K for the bend is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k_bend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".3f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Convert Cv to K for the valvue")]),t._v("\nk_valve "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6e9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d_inner_m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c_v_valvue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1561")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"K for the valve is ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k_valve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".3f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We can also use the prebuilt function")]),t._v("\nk_valve_api "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fittings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cv_to_K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Cv"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c_v_valvue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isclose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k_valve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k_valve_api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"The values are different ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k_valve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" vs ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k_valve_api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Calculate the pressure drop for each")]),t._v("\nflow_kg_per_s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flow_m3_per_h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density\np_drop_pipe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" friction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_phase_dP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flow_kg_per_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamic_viscosity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d_inner_m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    roughness"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("roughness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    L"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("length_pipe_m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np_drop_bend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k_bend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" velocity_m_per_s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\np_drop_valve "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k_valve "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" liquid_methane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("density "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" velocity_m_per_s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\np_drop_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p_drop_pipe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p_drop_bend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" p_drop_valve\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pressure drop [Pa]:\\n\\t"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"pipe: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop_pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\\n\\t"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"bend: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop_bend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\\n\\t"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"valve: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop_valve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\\n\\t"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"total: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p_drop_total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\\n\\t"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Liquid methane: \n\tdensity: 424.5701316256901 kg/m3\n\tdynamic viscosity: 1.210e-04 Pa s\nRoughness of the pipe is 1.500e-04\nK for the bend is 0.276\nK for the valve is 0.160\nPressure drop [Pa]:\n\tpipe: 40138\n\tbend: 13761\n\tvalve: 7986\n\ttotal: 61885\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);